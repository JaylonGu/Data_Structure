/*
01:大盗阿福
查看提交统计提问
总时间限制: 1000ms 内存限制: 65536kB
描述
阿福是一名经验丰富的大盗。趁着月黑风高，阿福打算今晚洗劫一条街上的店铺。

这条街上一共有 N 家店铺，每家店中都有一些现金。阿福事先调查得知，只有当他同时洗劫了两家相邻的店铺时，街上的报警系统才会启动，然后警察就会蜂拥而至。

作为一向谨慎作案的大盗，阿福不愿意冒着被警察追捕的风险行窃。他想知道，在不惊动警察的情况下，他今晚最多可以得到多少现金？

输入
输入的第一行是一个整数 T (T <= 50) ，表示一共有 T 组数据。
接下来的每组数据，第一行是一个整数 N (1 <= N <= 100, 000) ，表示一共有 N 家店铺。第二行是 N 个被空格分开的正整数，表示每一家店铺中的现金数量。每家店铺中的现金数量均不超过 1000 。
输出
对于每组数据，输出一行。该行包含一个整数，表示阿福在不惊动警察的情况下可以得到的现金数量。
样例输入
2
3
1 8 2
4
10 7 6 14
样例输出
8
24
提示
对于第一组样例，阿福选择第 2 家店铺行窃，获得的现金数量为 8 。
对于第二组样例，阿福选择第 1 和 4 家店铺行窃，获得的现金数量为 10 + 14 = 24 。
*/

#include <iostream>
#include <cstring>
using namespace std;

int shop[100000];
int dp[100000];

int main(){
    int T;
    cin>>T;
    while(T--){
        int N;
        cin>>N;
        for(int i=0;i<N;++i) cin>>shop[i];
        memset(dp,0,sizeof(dp));
        dp[0]=shop[0];
        if(N>=2) dp[1]=max(shop[0],shop[1]);
        for(int i=2;i<N;++i){
            dp[i]=max(shop[i]+dp[i-2],dp[i-1]);
        }
        cout<<dp[N-1]<<endl;
    }

    return 0;
}